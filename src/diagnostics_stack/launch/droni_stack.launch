<launch>
	<!--include file="$(find ros2mav)/launch/ros2mav.launch"/-->
  	<!--include file="$(find protomav)/launch/protomav.launch" /-->
  	<!--include file="$(find ros2mav)/launch/image2mav.launch" /-->
  	<!--include file="$(find mtig_driver)/launch/mtig_driver.launch" /-->

  	<!--include file="$(find protomav)/launch/mavros.launch" /-->
	<!--   <node pkg="mavros" type="gcs_bridge" name="mavlink_bridge">
		<param name="gcs_url" value="udp://localhost:14554@localhost:14553" />
  	</node> -->
	<node pkg="diagnostics_stack" type="diagnostics" name="diagnostics" output="screen">
  	</node>

    <node pkg="ros_pololu_servo" type="ros_pololu_servo_node" name="ros_pololu_servo_node">
        <param name="pololu_motors_yaml" value="$(find ros_pololu_servo)/launch/pololu_motors.yaml" />
        <param name="port_name" value="/dev/sensors/pololu_maestro" />
        <param name="baud_rate" value="115200" />
        <param name="rate_hz" value="10" />
        <param name="daisy_chain" value="false" />
    </node>

   <node pkg="yocto_master" type="yocto_node" name="yocto_node" output="screen">
   </node>

	 <!--param name="device" type="str" value="/dev/ttylightware_altitude" /-->
	 <node pkg="droni_airspeed_driver" name="airspeed_sensor" type="airspeed_node" output="screen">
		 <param name="serial_port" type="string" value="/dev/sensors/d_airspeed" />
		 <param name="serial_speed" type="int" value="115200" />
	 </node>

	 <!--param name="device" type="str" value="/dev/ttylightware_altitude" /-->
	 <node pkg="sf11_altimeter" name="altitude_sensor" type="sf11c_node" >
			<param name="serial_port" type="string" value="/dev/sensors/sf11" />
			<!--param name="serial_port" type="string" value="/dev/ttyUSB0" /-->
			<param name="serial_speed" type="int" value="115200" />
	 </node>
	 <!-- Determine this using rosrun pointgrey_camera_driver list_cameras.
If not specified, defaults to first camera found. -->
<!--arg name="camera_serial" default="0" /-->
<arg name="camera_serial" value="12502116" />
<arg name="calibrated" default="0" />

<group ns="camera">
  <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />
  <node pkg="nodelet" type="nodelet" name="camera_nodelet" args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
 <param name="frame_id" value="camera" />
 <param name="serial" value="$(arg camera_serial)" />
 <param name="video_mode" value="format7_mode4" />
 <!-- Format0_Mode5 (640x480_mono8) -->

 <!-- When unspecified, the driver will use the default framerate as given by the
      camera itself. Use this parameter to override that value for cameras capable of
      other framerates. -->
 <param name="frame_rate" value="60" /> 
 <!--param name="framerate" value="60.0" /-->
 <param name="shutter_speed" value="3.5" />
 <!-- Use the camera_calibration package to create this file -->
 <param name="camera_info_url" if="$(arg calibrated)"
        value="file://$(env HOME)/.ros/camera_info/$(arg camera_serial).yaml" />
</node>

<node pkg="nodelet" type="nodelet" name="image_proc_debayer"
     args="load image_proc/debayer camera_nodelet_manager">
</node>
<!-- rosrun image_view image_view image:=/camera/image_raw -->
</group>

<!--node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/camera/image_raw"/>
    <param name="autosize" value="true" />
</node>
<node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" /--> 

  <arg name="frame" default="xsens" />
  <node pkg="mtig_driver" type="mtig_driver_node" name="mtig_driver" respawn="true" ><!--output="screen"-->
    <!-- Error parameters /-->
    <param name="roll_error" value="0.2" />
    <param name="pitch_error" value="0.2" />
    <param name="yaw_error" value="1.0" />
    <param name="acc_noise" value="0.00015" />
    <param name="gyr_noise" value="0.01" />

    <!-- Frame Parameter /-->
    <param name="frame_id" value="$(arg frame)" />

    <!-- TODO: Sem magnetico /-->
    <param name="override" value="true"/>

    <!-- Module Setup Parameters /-->
    <param name="orientation_enabled" value="true"/>
    <param name="orientation_frequency" value="100"/>
    <param name="gps_enabled" value="true"/>
    <param name="gps_frequency" value="20"/>
    <param name="temperature_enabled" value="true"/>
    <param name="temperature_frequency" value="20"/>
    <param name="acceleration_enabled" value="true"/>
    <param name="acceleration_frequency" value="100"/>
    <param name="pressure_enabled" value="true"/>
    <param name="pressure_frequency" value="20"/>
    <param name="magnetic_enabled" value="true"/>
    <param name="magnetic_frequency" value="20"/>
    <param name="altitude_enabled" value="true"/>
    <param name="altitude_frequency" value="20"/>
    <param name="velocity_enabled" value="true"/>
    <param name="velocity_frequency" value="100"/>
    <param name="gyroscope_enabled" value="true"/>
    <param name="gyroscope_frequency" value="100"/>
  </node>

</launch>
